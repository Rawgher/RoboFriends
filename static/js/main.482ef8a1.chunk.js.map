{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","actions.js","constants.js","reducers.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","position","padding","maxWidth","margin","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onRequestRobots","_this$props","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","intitialStateSearch","intitialStateRobots","store","configureStore","reducer","arguments","length","undefined","action","assign","middleware","getDefaultMiddleware","logger","container","document","getElementById","ReactDOM","createRoot","render","es","src_containers_App"],"mappings":"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","file":"static/js/main.482ef8a1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {\r\n        robots.map((user, i) => {\r\n          return (\r\n            <Card\r\n              key={i}\r\n              id={robots[i].id}\r\n              name={robots[i].name}\r\n              email={robots[i].email}\r\n              />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search robots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ position: 'relative', padding: '40px 0', maxWidth: '70%', margin: '0 auto' }}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooops. Something went wrong.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\nimport { requestRobots, setSearchField } from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots: state.requestRobots.robots, \r\n    isPending: state.requestRobots.isPending,\r\n    error: state.requestRobots.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots())\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onRequestRobots()\r\n  }\r\n\r\n  render() {\r\n    const { searchField, onSearchChange, robots, isPending } = this.props;\r\n    const filteredRobots = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    })\r\n    return isPending ?\r\n      <h1>Loading</h1> :\r\n      (\r\n        <div className='tc'>\r\n          <header className='w-100 ph3 pv3 pv4-ns ph4-m ph5-l'>\r\n            <h1 className='f1'>RoboFriends</h1>\r\n            <SearchBox searchChange={onSearchChange}/>\r\n          </header>\r\n          <Scroll>\r\n            <ErrorBoundary>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundary>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from \"./constants\";\r\n\r\nexport const setSearchField = (text) => ({\r\n    // type is action taken -- all caps since it's a constant\r\n    type: CHANGE_SEARCH_FIELD,\r\n    // payload is what's returned from the action\r\n    payload: text\r\n});\r\n\r\n// a function that calls a function\r\nexport const requestRobots = () => (dispatch) => {\r\n    dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data}))\r\n        .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error}))\r\n};","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_FAILED, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS } from \"./constants\";\r\n\r\nconst intitialStateSearch = {\r\n    searchField: ''\r\n}\r\n\r\nconst intitialStateRobots = {\r\n    isPending: false,\r\n    robots: [],\r\n    error: ''\r\n}\r\n\r\nexport const searchRobots = (state = intitialStateSearch, action = {}) => {\r\n    switch(action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return Object.assign({}, state, { searchField: action.payload });\r\n            // return { ...state, {searchField: action.payload}};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const requestRobots = (state = intitialStateRobots, action = {}) => {\r\n    switch(action.type) {\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return Object.assign({}, state, { isPending: true });\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return Object.assign({}, state, { robots: action.payload, isPending: false });\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return Object.assign({}, state, { error: action.payload, isPending: false });  \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger'\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport 'tachyons'; \r\nimport { searchRobots, requestRobots } from './reducers';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        searchRobots: searchRobots,\r\n        requestRobots: requestRobots\r\n    },\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n});\r\n\r\nconst container = document.getElementById('root');\r\nconst root = ReactDOM.createRoot(container);\r\nroot.render(\r\n    <Provider store={store} >\r\n        <App />\r\n    </Provider>\r\n);"],"sourceRoot":""}